{"ast":null,"code":"import { SET_DANH_SACH_SV, SUA_SINH_VIEN, THEM_SINH_VIEN, TIM_KIEM_SINH_VIEN, XOA_SINH_VIEN } from \"../constant/quanlySvConstant\";\nconst initialState = {\n  dssv: []\n};\nexport const quanlySvReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DANH_SACH_SV:\n      state.dssv = action.payload;\n      return { ...state\n      };\n\n    case THEM_SINH_VIEN:\n      let cloneArr = [...state.dssv];\n      cloneArr.push(action.payload);\n      state.dssv = cloneArr;\n      return { ...state\n      };\n\n    case XOA_SINH_VIEN:\n      let id = action.payload;\n      let index = state.dssv.findIndex(sv => {\n        return sv.id = id;\n      });\n      index !== -1 && state.dssv.splice(index, 1);\n      return { ...state\n      };\n\n    case SUA_SINH_VIEN:\n      return { ...state\n      };\n\n    case TIM_KIEM_SINH_VIEN:\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // let sinhVien={\n//   id:2093,\n//   phone:\"\"\n//   email:\"\"\n//   phone:\"\"\n// }\n// let eventName = \"email\";\n// sinhVien = {...sinhVien,id:10}","map":{"version":3,"sources":["/Users/luc/Desktop/Workspace/CyberSoft/ReactJS_buoi2/source 2/src/Axios-QuanLySinhVien/Redux/reducer/quanlySvReducer.js"],"names":["SET_DANH_SACH_SV","SUA_SINH_VIEN","THEM_SINH_VIEN","TIM_KIEM_SINH_VIEN","XOA_SINH_VIEN","initialState","dssv","quanlySvReducer","state","action","type","payload","cloneArr","push","id","index","findIndex","sv","splice"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,kBAJF,EAKEC,aALF,QAMO,8BANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AACEQ,MAAAA,KAAK,CAACF,IAAN,GAAaG,MAAM,CAACE,OAApB;AACA,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACF,SAAKN,cAAL;AACE,UAAIU,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACF,IAAV,CAAf;AACAM,MAAAA,QAAQ,CAACC,IAAT,CAAcJ,MAAM,CAACE,OAArB;AACAH,MAAAA,KAAK,CAACF,IAAN,GAAaM,QAAb;AACA,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AACF,SAAKJ,aAAL;AACE,UAAIU,EAAE,GAAGL,MAAM,CAACE,OAAhB;AACA,UAAII,KAAK,GAAGP,KAAK,CAACF,IAAN,CAAWU,SAAX,CAAsBC,EAAD,IAAQ;AACvC,eAAQA,EAAE,CAACH,EAAH,GAAQA,EAAhB;AACD,OAFW,CAAZ;AAGAC,MAAAA,KAAK,KAAK,CAAC,CAAX,IAAgBP,KAAK,CAACF,IAAN,CAAWY,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB,CAAhB;AACA,aAAO,EAAE,GAAGP;AAAL,OAAP;;AACF,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGO;AAAL,OAAP;;AACF,SAAKL,kBAAL;AACE,aAAO,EAAE,GAAGK;AAAL,OAAP;;AACF;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AArBJ;AAuBD,CAxBM,C,CA0BP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import {\n  SET_DANH_SACH_SV,\n  SUA_SINH_VIEN,\n  THEM_SINH_VIEN,\n  TIM_KIEM_SINH_VIEN,\n  XOA_SINH_VIEN,\n} from \"../constant/quanlySvConstant\";\n\nconst initialState = {\n  dssv: [],\n};\n\nexport const quanlySvReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DANH_SACH_SV:\n      state.dssv = action.payload;\n      return { ...state };\n    case THEM_SINH_VIEN:\n      let cloneArr = [...state.dssv];\n      cloneArr.push(action.payload);\n      state.dssv = cloneArr;\n      return { ...state };\n    case XOA_SINH_VIEN:\n      let id = action.payload;\n      let index = state.dssv.findIndex((sv) => {\n        return (sv.id = id);\n      });\n      index !== -1 && state.dssv.splice(index, 1);\n      return { ...state };\n    case SUA_SINH_VIEN:\n      return { ...state };\n    case TIM_KIEM_SINH_VIEN:\n      return { ...state };\n    default:\n      return { ...state };\n  }\n};\n\n// let sinhVien={\n//   id:2093,\n//   phone:\"\"\n//   email:\"\"\n//   phone:\"\"\n// }\n\n// let eventName = \"email\";\n\n// sinhVien = {...sinhVien,id:10}\n"]},"metadata":{},"sourceType":"module"}