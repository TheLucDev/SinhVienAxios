{"ast":null,"code":"import { LUU_SINH_VIEN, SET_DANH_SACH_SV, SUA_SINH_VIEN, THEM_SINH_VIEN, XOA_SINH_VIEN } from \"../constant/quanlySvConstant\";\nconst initialState = {\n  dssv: [],\n  editSinhVien: null\n};\nexport const quanlySvReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DANH_SACH_SV:\n      state.dssv = action.payload;\n      return { ...state\n      };\n\n    case THEM_SINH_VIEN:\n      let cloneArr = [...state.dssv];\n      cloneArr.push(action.payload);\n      state.dssv = cloneArr;\n      return { ...state\n      };\n\n    case XOA_SINH_VIEN:\n      let id = action.payload;\n      let newcloneArr = [...state.dssv];\n      let index = newcloneArr.findIndex(sv => {\n        return sv.id == id;\n      });\n      index !== -1 && newcloneArr.splice(index, 1);\n      state.dssv = newcloneArr;\n      return { ...state\n      };\n\n    case SUA_SINH_VIEN:\n      {\n        let editSinhVien = action.payload; // let cloneArr = [...state.dssv];\n        // let index = cloneArr.findIndex((sv) => {\n        //   return sv.id === editSinhVien.id;\n        // });\n        // if(index!==-1){\n        // }\n\n        state.editSinhVien = editSinhVien;\n        return { ...state\n        };\n      }\n\n    case LUU_SINH_VIEN:\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}; // let sinhVien={\n//   id:2093,\n//   phone:\"\"\n//   email:\"\"\n//   phone:\"\"\n// }\n// let eventName = \"email\";\n// sinhVien = {...sinhVien,id:10}","map":{"version":3,"sources":["/Users/luc/Desktop/Workspace/CyberSoft/ReactJS_buoi2/SinhVien/src/Axios-QuanLySinhVien/Redux/reducer/quanlySvReducer.js"],"names":["LUU_SINH_VIEN","SET_DANH_SACH_SV","SUA_SINH_VIEN","THEM_SINH_VIEN","XOA_SINH_VIEN","initialState","dssv","editSinhVien","quanlySvReducer","state","action","type","payload","cloneArr","push","id","newcloneArr","index","findIndex","sv","splice"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,aALF,QAMO,8BANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;AAMA,OAAO,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AACEQ,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACE,OAApB;AACA,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACF,SAAKN,cAAL;AACE,UAAIU,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACH,IAAV,CAAf;AACAO,MAAAA,QAAQ,CAACC,IAAT,CAAcJ,MAAM,CAACE,OAArB;AACAH,MAAAA,KAAK,CAACH,IAAN,GAAaO,QAAb;AACA,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AACF,SAAKL,aAAL;AACE,UAAIW,EAAE,GAAGL,MAAM,CAACE,OAAhB;AACA,UAAII,WAAW,GAAG,CAAC,GAAGP,KAAK,CAACH,IAAV,CAAlB;AACA,UAAIW,KAAK,GAAGD,WAAW,CAACE,SAAZ,CAAuBC,EAAD,IAAQ;AACxC,eAAOA,EAAE,CAACJ,EAAH,IAASA,EAAhB;AACD,OAFW,CAAZ;AAGAE,MAAAA,KAAK,KAAK,CAAC,CAAX,IAAgBD,WAAW,CAACI,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B,CAAhB;AACAR,MAAAA,KAAK,CAACH,IAAN,GAAaU,WAAb;AACA,aAAO,EAAE,GAAGP;AAAL,OAAP;;AACF,SAAKP,aAAL;AAAoB;AAClB,YAAIK,YAAY,GAAGG,MAAM,CAACE,OAA1B,CADkB,CAGlB;AAEA;AACA;AACA;AAEA;AAEA;;AACAH,QAAAA,KAAK,CAACF,YAAN,GAAqBA,YAArB;AACA,eAAO,EAAE,GAAGE;AAAL,SAAP;AACD;;AACD,SAAKT,aAAL;AACE,aAAO,EAAE,GAAGS;AAAL,OAAP;;AACF;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AApCJ;AAsCD,CAvCM,C,CAyCP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import {\n  LUU_SINH_VIEN,\n  SET_DANH_SACH_SV,\n  SUA_SINH_VIEN,\n  THEM_SINH_VIEN,\n  XOA_SINH_VIEN,\n} from \"../constant/quanlySvConstant\";\n\nconst initialState = {\n  dssv: [],\n\n  editSinhVien: null,\n};\n\nexport const quanlySvReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DANH_SACH_SV:\n      state.dssv = action.payload;\n      return { ...state };\n    case THEM_SINH_VIEN:\n      let cloneArr = [...state.dssv];\n      cloneArr.push(action.payload);\n      state.dssv = cloneArr;\n      return { ...state };\n    case XOA_SINH_VIEN:\n      let id = action.payload;\n      let newcloneArr = [...state.dssv];\n      let index = newcloneArr.findIndex((sv) => {\n        return sv.id == id;\n      });\n      index !== -1 && newcloneArr.splice(index, 1);\n      state.dssv = newcloneArr;\n      return { ...state };\n    case SUA_SINH_VIEN: {\n      let editSinhVien = action.payload;\n\n      // let cloneArr = [...state.dssv];\n\n      // let index = cloneArr.findIndex((sv) => {\n      //   return sv.id === editSinhVien.id;\n      // });\n\n      // if(index!==-1){\n\n      // }\n      state.editSinhVien = editSinhVien;\n      return { ...state };\n    }\n    case LUU_SINH_VIEN:\n      return { ...state };\n    default:\n      return { ...state };\n  }\n};\n\n// let sinhVien={\n//   id:2093,\n//   phone:\"\"\n//   email:\"\"\n//   phone:\"\"\n// }\n\n// let eventName = \"email\";\n\n// sinhVien = {...sinhVien,id:10}\n"]},"metadata":{},"sourceType":"module"}